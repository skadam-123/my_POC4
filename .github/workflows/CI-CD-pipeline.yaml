name: CI/CD Pipeline
 
on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
    paths:
      - simple-node-app/**  # Only trigger on changes in the application code
  workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest  # Use GitHub-hosted runner
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the code from the GitHub repo
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS Access Key from GitHub secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS Secret Key from GitHub secrets
          aws-region: ap-south-1  # Your AWS region
 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  # Log in to ECR to push images
 
      - name: Build Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}  # Use commit SHA as the image tag
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:$IMAGE_TAG ./app  # Tag with the commit SHA
          docker tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:latest  # Tag as latest
 
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}  # Use the same tag for pushing
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:$IMAGE_TAG  # Push the SHA-tagged image
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:latest  # Push the latest-tagged image
 
  deploy:
    runs-on: ubuntu-latest  # Change if using a self-hosted runner
    needs: build  # Ensure the build job completes first
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the code from the GitHub repo
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS Access Key from GitHub secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS Secret Key from GitHub secrets
          aws-region: ap-south-1  # Your AWS region
 
      - name: Deploy to ECS using AWS CLI
        run: |
          aws ecs update-service --cluster demo-ecs-cluster --service my-fargate-service --force-new-deployment --task-definition my-fargate-task
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS Access Key from GitHub secrets
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS Secret Key from GitHub secrets
          AWS_DEFAULT_REGION: ap-south-1  # Your AWS region